// Code generated by entc, DO NOT EDIT.

package stocks

import (
	"time"
)

const (
	// Label holds the string label denoting the stocks type in the database.
	Label = "stocks"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSymbol holds the string denoting the symbol field in the database.
	FieldSymbol = "symbol"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldNameJa holds the string denoting the name_ja field in the database.
	FieldNameJa = "name_ja"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldExchange holds the string denoting the exchange field in the database.
	FieldExchange = "exchange"
	// FieldExchangeShortName holds the string denoting the exchange_short_name field in the database.
	FieldExchangeShortName = "exchange_short_name"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldIndustry holds the string denoting the industry field in the database.
	FieldIndustry = "industry"
	// FieldMarketCarp holds the string denoting the market_carp field in the database.
	FieldMarketCarp = "market_carp"
	// FieldLastDiv holds the string denoting the last_div field in the database.
	FieldLastDiv = "last_div"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldWebsite holds the string denoting the website field in the database.
	FieldWebsite = "website"
	// FieldCeo holds the string denoting the ceo field in the database.
	FieldCeo = "ceo"
	// FieldSector holds the string denoting the sector field in the database.
	FieldSector = "sector"
	// FieldCountry holds the string denoting the country field in the database.
	FieldCountry = "country"
	// FieldFullTimeEmployees holds the string denoting the full_time_employees field in the database.
	FieldFullTimeEmployees = "full_time_employees"
	// FieldPhone holds the string denoting the phone field in the database.
	FieldPhone = "phone"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldCity holds the string denoting the city field in the database.
	FieldCity = "city"
	// FieldState holds the string denoting the state field in the database.
	FieldState = "state"
	// FieldZip holds the string denoting the zip field in the database.
	FieldZip = "zip"
	// FieldImage holds the string denoting the image field in the database.
	FieldImage = "image"
	// FieldIpoDate holds the string denoting the ipo_date field in the database.
	FieldIpoDate = "ipo_date"
	// FieldYield holds the string denoting the yield field in the database.
	FieldYield = "yield"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeStocks holds the string denoting the stocks edge name in mutations.
	EdgeStocks = "stocks"
	// Table holds the table name of the stocks in the database.
	Table = "stocks"
	// StocksTable is the table that holds the stocks relation/edge. The primary key declared below.
	StocksTable = "stocks_stocks"
)

// Columns holds all SQL columns for stocks fields.
var Columns = []string{
	FieldID,
	FieldSymbol,
	FieldName,
	FieldNameJa,
	FieldType,
	FieldExchange,
	FieldExchangeShortName,
	FieldPrice,
	FieldIndustry,
	FieldMarketCarp,
	FieldLastDiv,
	FieldDescription,
	FieldWebsite,
	FieldCeo,
	FieldSector,
	FieldCountry,
	FieldFullTimeEmployees,
	FieldPhone,
	FieldAddress,
	FieldCity,
	FieldState,
	FieldZip,
	FieldImage,
	FieldIpoDate,
	FieldYield,
	FieldCreatedAt,
	FieldUpdatedAt,
}

var (
	// StocksPrimaryKey and StocksColumn2 are the table columns denoting the
	// primary key for the stocks relation (M2M).
	StocksPrimaryKey = []string{"stocks_id", "stock_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultNameJa holds the default value on creation for the "name_ja" field.
	DefaultNameJa string
	// DefaultType holds the default value on creation for the "type" field.
	DefaultType string
	// DefaultExchange holds the default value on creation for the "exchange" field.
	DefaultExchange string
	// DefaultExchangeShortName holds the default value on creation for the "exchange_short_name" field.
	DefaultExchangeShortName string
	// DefaultPrice holds the default value on creation for the "price" field.
	DefaultPrice float64
	// DefaultIndustry holds the default value on creation for the "industry" field.
	DefaultIndustry string
	// DefaultMarketCarp holds the default value on creation for the "market_carp" field.
	DefaultMarketCarp float64
	// DefaultLastDiv holds the default value on creation for the "last_div" field.
	DefaultLastDiv float64
	// DefaultDescription holds the default value on creation for the "description" field.
	DefaultDescription float64
	// DefaultWebsite holds the default value on creation for the "website" field.
	DefaultWebsite string
	// DefaultCeo holds the default value on creation for the "ceo" field.
	DefaultCeo string
	// DefaultSector holds the default value on creation for the "sector" field.
	DefaultSector string
	// DefaultCountry holds the default value on creation for the "country" field.
	DefaultCountry string
	// DefaultFullTimeEmployees holds the default value on creation for the "full_time_employees" field.
	DefaultFullTimeEmployees string
	// DefaultPhone holds the default value on creation for the "phone" field.
	DefaultPhone string
	// DefaultAddress holds the default value on creation for the "address" field.
	DefaultAddress string
	// DefaultCity holds the default value on creation for the "city" field.
	DefaultCity string
	// DefaultState holds the default value on creation for the "state" field.
	DefaultState string
	// DefaultZip holds the default value on creation for the "zip" field.
	DefaultZip string
	// DefaultImage holds the default value on creation for the "image" field.
	DefaultImage string
	// DefaultIpoDate holds the default value on creation for the "ipo_date" field.
	DefaultIpoDate string
	// DefaultYield holds the default value on creation for the "yield" field.
	DefaultYield float64
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
)
